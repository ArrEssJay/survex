dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/caverot.c)
AM_INIT_AUTOMAKE(survex, 0.90)
AM_CONFIG_HEADER(config.h)

AC_DEFINE(COPYRIGHT_MSG,"Copyright (C) 1990-1999 Olly Betts")

dnl Checks for programs.
AC_PROG_CC

AC_PROG_MAKE_SET

AC_EXEEXT
AC_OBJEXT

if test "$MINGW32$CYGWIN" != ""; then
dnl assume mingw32 or cygwin means littleendian (may not be true for NT
dnl on non-intel platforms...
ac_cv_c_bigendian=no
else
dnl autoconf doesn't look in the right place to find the endian-ness of
dnl a djgpp crosscompiler
dnl See if machine/endian.h defines the BYTE_ORDER macro.
AC_MSG_CHECKING(checking from machine/endian.h)
AC_TRY_COMPILE([#include <machine/endian.h>], [
#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN
 bogus endian macros
#endif],
[# It does; now see whether it defined to BIG_ENDIAN or not.
AC_MSG_RESULT(found)
AC_TRY_COMPILE([#include <machine/endian.h>], [
#if BYTE_ORDER != BIG_ENDIAN
 not big endian
#endif], ac_cv_c_bigendian=yes, ac_cv_c_bigendian=no)],
AC_MSG_RESULT(not found)
dnl if that didn't work, try usual autoconf tests
AC_C_BIGENDIAN
)
fi

AC_CHECK_PROGS(STRIP, strip, echo "not stripping ")

dnl Checks for libraries.
dnl Replace `main' with a function in -lX11:
dnl AC_CHECK_LIB(X11, main)
dnl Replace `main' with a function in -lallegro:
dnl AC_CHECK_LIB(allegro, main)
dnl Replace `main' with a function in -lgrx20:
dnl AC_CHECK_LIB(grx20, main)
dnl Replace `main' with a function in -lj:
dnl AC_CHECK_LIB(j, main)
dnl Replace `main' with a function in -lpc:
dnl AC_CHECK_LIB(pc, main)

AC_CHECK_LIB(m, sqrt)

dnl Checks for header files.
AC_PATH_XTRA

if test x$no_x != xyes; then
  CAVEROT=xcaverot ${CAVEROT}
  AC_MSG_RESULT("building xcaverot")
fi
AC_SUBST(CAVEROT)

dnl caverot libraries...
AC_SUBST(CRLIB)
dnl caverot platform specific sources...
AC_SUBST(CROBJX)

AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_TYPE_SIGNAL

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(mktime strdup strerror perror strtod strtol popen setjmp signal)

dnl difftime seems to be an ANSI invention
AC_CHECK_FUNCS(difftime)

dnl try to find a case-insensitive compare

AC_MSG_CHECKING(how to compare strings ignoring case)
AC_MSG_RESULT()
strcasecmp=no
# The order of these tests is important.
AC_CHECK_FUNC(strcasecmp, strcasecmp=strcasecmp )
if test $strcasecmp = no; then
  AC_CHECK_FUNC(stricmp, AC_DEFINE(strcasecmp, stricmp) strcasecmp=stricmp )
fi
if test $strcasecmp = no; then
  AC_CHECK_FUNC(strcmpi, AC_DEFINE(strcasecmp, strcmpi) strcasecmp=strcmpi )
fi
if test $strcasecmp = no; then
  LIBOBJS="$LIBOBJS strcasecmp.o"
  AC_MSG_RESULT("using own implementation of strcasecmp")
fi
AC_SUBST(LIBOBJS)

dnl extra flags for building with gcc
if test "$GCC" = yes; then
  CFLAGS="$CFLAGS -Wall -Wunused"
fi

AC_OUTPUT(Makefile src/Makefile doc/Makefile lib/Makefile hto/Makefile)
