#!/usr/bin/make -f
# Based on public domain debhelper example rules.multi2 by Joey Hess.
#
# Copyright (C) 2005,2006 Olly Betts
#
# GPL licensed.
#
# This is a multibinary package.  You can build any of the binary packages
# independently by using the appropriate binary-<package> target.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
CFLAGS += -O0
CXXFLAGS += -O0
else
CFLAGS += -O2
CXXFLAGS += -O2
endif
ifneq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
STRIP=/bin/true
endif

build: build-stamp
build-stamp:
	dh_testdir

	./configure --prefix=/usr --mandir=\$${prefix}/share/man --enable-docdir=\$${prefix}/share/doc/survex CFLAGS=$(CFLAGS) CXXFLAGS=$(CXXFLAGS) STRIP=$(STRIP)
	$(MAKE)
ifeq	($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
	$(MAKE) check
endif
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	-$(MAKE) distclean

	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	$(MAKE) DESTDIR=`pwd`/debian/tmp install
	install -d debian/survex/usr/share/vim/addons/ftdetect
	install -d debian/survex/usr/share/vim/addons/syntax
	install -m 0644 vim/ftdetect/survex.vim debian/survex/usr/share/vim/addons/ftdetect
	install -m 0644 vim/syntax/survex.vim debian/survex/usr/share/vim/addons/syntax

	dh_install --fail-missing

# This single target is used to build all the packages, all at once, or
# one at a time. So keep in mind: any options passed to commands here will
# affect _all_ packages. Anything you want to only affect one package
# should be put in another target, such as the install target.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_installmenu
# FIXME: investigate using dh_installmime
#	dh_installmime
	dh_strip
	dh_link
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture independent packages using the common target.
binary-indep: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-a binary-common

# Any other binary targets build just one binary package at a time.
binary-%: build install
	make -f debian/rules binary-common DH_OPTIONS=-p$*

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary-common binary install
