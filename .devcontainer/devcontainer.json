{
	"name": "ghcr.io/catthehacker/ubuntu:runner",
	"build": {
		"dockerfile": "Dockerfile",
		"target": "source_dist_builder"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	
	//Settings to use a container on a remote docker host 
	//In this example a remote azure VM is hosting the container
	//remoteUser is the user in the contaimer
	//the workspace mount source is the absolute location of a sync'd folder on the remote VM
	//The sync'd folder is bind mounted into the container workspace
	"remoteUser": "runneradmin",
	"workspaceFolder": "/workspace",
	"workspaceMount": "source=/home/azureuser/survex,target=/workspace,type=bind,consistency=cached"

}
