<refmeta>
<refentrytitle>cavern</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>

<refnamediv>
<refname>cavern</refname>
<refpurpose>process raw survey data
</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>cavern</command>
<arg choice="opt" rep="repeat">
  <option>option</option>
</arg>
<arg rep="repeat">survex data file</arg> <!--FIXME-->
</cmdsynopsis>
</refsynopsisdiv>
  
<refsect1><title>Description</title>

<!--FIXME: Cavern is the &survexsuite; data processing engine.-->

<!-- FIXME: brackets implied around each file -->

<!--
<Para>The command line is processed from left to right.
</Para>

<refsect3><Title>Brackets ( ... )</Title>

<Para>These allow the user to control the passing of settings from one
survey file to another. A '(' stores the current settings, which are then
restored by the corresponding ')'. This means that surrounding a filename by
brackets stops any settings (*SD values, *DATA styles, Calibration settings
etc.) changed from 'leaking' out. This also allows you to use your own
default settings file, like so:
</Para>

<Para>cavern Defaults ( SomeCave ) ( NewBit )
</Para>

<Para>A warning is given if you do not close as many brackets as you
open, or if you attempt to close brackets that you have not opened.
</Para>

-->

<refsect2><Title>Command Line Options</Title>

<VariableList>
<VarListEntry>
<Term>-p, --percentage</Term>
<ListItem>
<Para>You can get cavern to display the percentage progress through the
current file.  As of &survexsuite; 0.90 this is disabled by default, but you
can enable it if you want.  Because the value given is for the
<emphasis/current/ file, the values jump around for a multi-file survey
project. Also note that displaying this information slows down processing
a little.
<!-- FIXME: on a slow machine you'd probably rather it ran faster, and on a
fast machine you can't follow the change percentages.-->
</Para>
</ListItem>
</VarListEntry>

<VarListEntry>
<Term>-o, --output=OUTPUT</Term>
<ListItem>
<Para>Sets location for output files.
<!--FIXME elaborate this and other option descriptions.-->
</Para>
</ListItem>
</VarListEntry>

<VarListEntry>
<Term>-q, --quiet</Term>
<ListItem>
<Para>Only show a brief summary (--quiet --quiet or -qq will display
errors only).
</Para>
</ListItem>
</VarListEntry>

<VarListEntry>
<Term>-s, --no-auxiliary-files</Term>
<ListItem>
<Para>do not create .err file.
</Para>
</ListItem>
</VarListEntry>

<VarListEntry>
<Term>-w, --warnings-are-errors</Term>
<ListItem>
<Para>turn warnings into errors.
</Para>
</ListItem>
</VarListEntry>

<VarListEntry>
<Term>--log</Term>
<ListItem>
<Para>Send screen output to a .log file.
</Para>
</ListItem>
</VarListEntry>

<VarListEntry>
<Term>-x, --chasm-format</Term>
<ListItem>
<Para>Output data in chasm's 3dx format for use with Phil Underwood's
Chasm application.
</Para>
</ListItem>
</VarListEntry>

</VariableList>

</refsect2>

<refsect2><Title>Output</Title>

<Para>Cavern reads in text files containing the survey data
&svx;) and outputs two files, with the extensions
&x3d; and &err;.
By default these files are put in the current directory, 
with the same base filename as the first &svx; file read,
but a different extension.
You can change the directory and/or base filename using the --output
command line option.
<!-- FIXME: link --> 
</Para>

<Para>E.g. if you process the data file <filename>entrance.svx</filename>
with the command <userinput>cavern entrance</userinput> then the files
<filename>entrance.3d</filename> and <filename>entrance.err</filename>
will be created.
</Para>

<!-- mention .log FIXME -->

<Para>
Cavern also gives a range of statistics at the end of a successful run:
</Para>

<itemizedlist>
<listitem><para>The highest and lowest stations and the height difference
between them
</para></listitem>

<listitem><para>The total length of the survey (before and after
adjustment).  This total excludes survey legs flagged as SURFACE,
DUPLICATE, or SPLAY.
</para></listitem>

<listitem><para>The number of stations and legs.  Note that a *EQUATE
is counted as a leg in this statistic.
</para></listitem>

<!-- FIXME loops, components, anything else -->

<listitem><para>The East-West and North-South ranges, and the Northmost,
Southmost, Eastmost, and Westmost stations.
</para></listitem>

<listitem><para>The number of each size of node in the network (where size
is number of connections to a station) i.e. a one node is the end of a
dead-end traverse, a two-node is a typical station in the middle of a
traverse, a three-node is a T-junction etc.
</para></listitem>

<listitem><para>How long the processing took and how much CPU time was
used.
</para></listitem>
</itemizedlist>

<refsect3><Title>&x3d; - data describing the loop-closed centre line</Title>

<Para>This file contains details of the stations and legs, and any
flags associated with them.
</Para>

</refsect3>

<refsect3><Title>&err; - loop closure statistics (%age errors, etc)</Title>

<Para>This file contains statistics about each traverse in the survey
which is part of a loop. It includes various statistics for each
traverse, such as the percentage error per leg.
You should study this information to determine if any parts of the survey
are of lower quality or contain gross errors.

<!-- FIXME explain the various statistics -->
</Para>

</refsect3>

</refsect2>

<refsect2><Title>Error Messages</Title>

<Para>There are a number of error messages that you may get when processing
data.  Most of these are self explanatory, and will be caused by typing
mistakes, or by your survey data not being attached to fixed points. After
the error message telling you what has gone wrong, the filename
and line number of the offending line will
be printed, or the filename if a file couldn't be found.
<!-- FIXME: gcc format error msgs -->
<!-- FIXME: stops after N errors -->
</Para>

<Para>When surveys are not all connected to fixed points, &survexsuite; will
list some of the stations that are not connected.</Para>

</refsect2>

</refsect1>
